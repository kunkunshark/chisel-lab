FIRRTL version 1.1.0
circuit VendingMachine :
  module BcdTable :
    input clock : Clock
    input reset : UInt<1>
    input io_in : UInt<8>
    output io_out : UInt<8>

    node _io_out_T = bits(io_in, 6, 0)
    node table_0 = UInt<8>("h0") @[Bcd.scala 12:14 9:19]
    node _GEN_0 = validif(eq(UInt<1>("h0"), _io_out_T), table_0) @[Bcd.scala 15:{10,10}]
    node table_1 = UInt<8>("h1") @[Bcd.scala 12:14 9:19]
    node _GEN_1 = mux(eq(UInt<1>("h1"), _io_out_T), table_1, _GEN_0) @[Bcd.scala 15:{10,10}]
    node table_2 = UInt<8>("h2") @[Bcd.scala 12:14 9:19]
    node _GEN_2 = mux(eq(UInt<2>("h2"), _io_out_T), table_2, _GEN_1) @[Bcd.scala 15:{10,10}]
    node table_3 = UInt<8>("h3") @[Bcd.scala 12:14 9:19]
    node _GEN_3 = mux(eq(UInt<2>("h3"), _io_out_T), table_3, _GEN_2) @[Bcd.scala 15:{10,10}]
    node table_4 = UInt<8>("h4") @[Bcd.scala 12:14 9:19]
    node _GEN_4 = mux(eq(UInt<3>("h4"), _io_out_T), table_4, _GEN_3) @[Bcd.scala 15:{10,10}]
    node table_5 = UInt<8>("h5") @[Bcd.scala 12:14 9:19]
    node _GEN_5 = mux(eq(UInt<3>("h5"), _io_out_T), table_5, _GEN_4) @[Bcd.scala 15:{10,10}]
    node table_6 = UInt<8>("h6") @[Bcd.scala 12:14 9:19]
    node _GEN_6 = mux(eq(UInt<3>("h6"), _io_out_T), table_6, _GEN_5) @[Bcd.scala 15:{10,10}]
    node table_7 = UInt<8>("h7") @[Bcd.scala 12:14 9:19]
    node _GEN_7 = mux(eq(UInt<3>("h7"), _io_out_T), table_7, _GEN_6) @[Bcd.scala 15:{10,10}]
    node table_8 = UInt<8>("h8") @[Bcd.scala 12:14 9:19]
    node _GEN_8 = mux(eq(UInt<4>("h8"), _io_out_T), table_8, _GEN_7) @[Bcd.scala 15:{10,10}]
    node table_9 = UInt<8>("h9") @[Bcd.scala 12:14 9:19]
    node _GEN_9 = mux(eq(UInt<4>("h9"), _io_out_T), table_9, _GEN_8) @[Bcd.scala 15:{10,10}]
    node table_10 = UInt<8>("h10") @[Bcd.scala 12:14 9:19]
    node _GEN_10 = mux(eq(UInt<4>("ha"), _io_out_T), table_10, _GEN_9) @[Bcd.scala 15:{10,10}]
    node table_11 = UInt<8>("h11") @[Bcd.scala 12:14 9:19]
    node _GEN_11 = mux(eq(UInt<4>("hb"), _io_out_T), table_11, _GEN_10) @[Bcd.scala 15:{10,10}]
    node table_12 = UInt<8>("h12") @[Bcd.scala 12:14 9:19]
    node _GEN_12 = mux(eq(UInt<4>("hc"), _io_out_T), table_12, _GEN_11) @[Bcd.scala 15:{10,10}]
    node table_13 = UInt<8>("h13") @[Bcd.scala 12:14 9:19]
    node _GEN_13 = mux(eq(UInt<4>("hd"), _io_out_T), table_13, _GEN_12) @[Bcd.scala 15:{10,10}]
    node table_14 = UInt<8>("h14") @[Bcd.scala 12:14 9:19]
    node _GEN_14 = mux(eq(UInt<4>("he"), _io_out_T), table_14, _GEN_13) @[Bcd.scala 15:{10,10}]
    node table_15 = UInt<8>("h15") @[Bcd.scala 12:14 9:19]
    node _GEN_15 = mux(eq(UInt<4>("hf"), _io_out_T), table_15, _GEN_14) @[Bcd.scala 15:{10,10}]
    node table_16 = UInt<8>("h16") @[Bcd.scala 12:14 9:19]
    node _GEN_16 = mux(eq(UInt<5>("h10"), _io_out_T), table_16, _GEN_15) @[Bcd.scala 15:{10,10}]
    node table_17 = UInt<8>("h17") @[Bcd.scala 12:14 9:19]
    node _GEN_17 = mux(eq(UInt<5>("h11"), _io_out_T), table_17, _GEN_16) @[Bcd.scala 15:{10,10}]
    node table_18 = UInt<8>("h18") @[Bcd.scala 12:14 9:19]
    node _GEN_18 = mux(eq(UInt<5>("h12"), _io_out_T), table_18, _GEN_17) @[Bcd.scala 15:{10,10}]
    node table_19 = UInt<8>("h19") @[Bcd.scala 12:14 9:19]
    node _GEN_19 = mux(eq(UInt<5>("h13"), _io_out_T), table_19, _GEN_18) @[Bcd.scala 15:{10,10}]
    node table_20 = UInt<8>("h20") @[Bcd.scala 12:14 9:19]
    node _GEN_20 = mux(eq(UInt<5>("h14"), _io_out_T), table_20, _GEN_19) @[Bcd.scala 15:{10,10}]
    node table_21 = UInt<8>("h21") @[Bcd.scala 12:14 9:19]
    node _GEN_21 = mux(eq(UInt<5>("h15"), _io_out_T), table_21, _GEN_20) @[Bcd.scala 15:{10,10}]
    node table_22 = UInt<8>("h22") @[Bcd.scala 12:14 9:19]
    node _GEN_22 = mux(eq(UInt<5>("h16"), _io_out_T), table_22, _GEN_21) @[Bcd.scala 15:{10,10}]
    node table_23 = UInt<8>("h23") @[Bcd.scala 12:14 9:19]
    node _GEN_23 = mux(eq(UInt<5>("h17"), _io_out_T), table_23, _GEN_22) @[Bcd.scala 15:{10,10}]
    node table_24 = UInt<8>("h24") @[Bcd.scala 12:14 9:19]
    node _GEN_24 = mux(eq(UInt<5>("h18"), _io_out_T), table_24, _GEN_23) @[Bcd.scala 15:{10,10}]
    node table_25 = UInt<8>("h25") @[Bcd.scala 12:14 9:19]
    node _GEN_25 = mux(eq(UInt<5>("h19"), _io_out_T), table_25, _GEN_24) @[Bcd.scala 15:{10,10}]
    node table_26 = UInt<8>("h26") @[Bcd.scala 12:14 9:19]
    node _GEN_26 = mux(eq(UInt<5>("h1a"), _io_out_T), table_26, _GEN_25) @[Bcd.scala 15:{10,10}]
    node table_27 = UInt<8>("h27") @[Bcd.scala 12:14 9:19]
    node _GEN_27 = mux(eq(UInt<5>("h1b"), _io_out_T), table_27, _GEN_26) @[Bcd.scala 15:{10,10}]
    node table_28 = UInt<8>("h28") @[Bcd.scala 12:14 9:19]
    node _GEN_28 = mux(eq(UInt<5>("h1c"), _io_out_T), table_28, _GEN_27) @[Bcd.scala 15:{10,10}]
    node table_29 = UInt<8>("h29") @[Bcd.scala 12:14 9:19]
    node _GEN_29 = mux(eq(UInt<5>("h1d"), _io_out_T), table_29, _GEN_28) @[Bcd.scala 15:{10,10}]
    node table_30 = UInt<8>("h30") @[Bcd.scala 12:14 9:19]
    node _GEN_30 = mux(eq(UInt<5>("h1e"), _io_out_T), table_30, _GEN_29) @[Bcd.scala 15:{10,10}]
    node table_31 = UInt<8>("h31") @[Bcd.scala 12:14 9:19]
    node _GEN_31 = mux(eq(UInt<5>("h1f"), _io_out_T), table_31, _GEN_30) @[Bcd.scala 15:{10,10}]
    node table_32 = UInt<8>("h32") @[Bcd.scala 12:14 9:19]
    node _GEN_32 = mux(eq(UInt<6>("h20"), _io_out_T), table_32, _GEN_31) @[Bcd.scala 15:{10,10}]
    node table_33 = UInt<8>("h33") @[Bcd.scala 12:14 9:19]
    node _GEN_33 = mux(eq(UInt<6>("h21"), _io_out_T), table_33, _GEN_32) @[Bcd.scala 15:{10,10}]
    node table_34 = UInt<8>("h34") @[Bcd.scala 12:14 9:19]
    node _GEN_34 = mux(eq(UInt<6>("h22"), _io_out_T), table_34, _GEN_33) @[Bcd.scala 15:{10,10}]
    node table_35 = UInt<8>("h35") @[Bcd.scala 12:14 9:19]
    node _GEN_35 = mux(eq(UInt<6>("h23"), _io_out_T), table_35, _GEN_34) @[Bcd.scala 15:{10,10}]
    node table_36 = UInt<8>("h36") @[Bcd.scala 12:14 9:19]
    node _GEN_36 = mux(eq(UInt<6>("h24"), _io_out_T), table_36, _GEN_35) @[Bcd.scala 15:{10,10}]
    node table_37 = UInt<8>("h37") @[Bcd.scala 12:14 9:19]
    node _GEN_37 = mux(eq(UInt<6>("h25"), _io_out_T), table_37, _GEN_36) @[Bcd.scala 15:{10,10}]
    node table_38 = UInt<8>("h38") @[Bcd.scala 12:14 9:19]
    node _GEN_38 = mux(eq(UInt<6>("h26"), _io_out_T), table_38, _GEN_37) @[Bcd.scala 15:{10,10}]
    node table_39 = UInt<8>("h39") @[Bcd.scala 12:14 9:19]
    node _GEN_39 = mux(eq(UInt<6>("h27"), _io_out_T), table_39, _GEN_38) @[Bcd.scala 15:{10,10}]
    node table_40 = UInt<8>("h40") @[Bcd.scala 12:14 9:19]
    node _GEN_40 = mux(eq(UInt<6>("h28"), _io_out_T), table_40, _GEN_39) @[Bcd.scala 15:{10,10}]
    node table_41 = UInt<8>("h41") @[Bcd.scala 12:14 9:19]
    node _GEN_41 = mux(eq(UInt<6>("h29"), _io_out_T), table_41, _GEN_40) @[Bcd.scala 15:{10,10}]
    node table_42 = UInt<8>("h42") @[Bcd.scala 12:14 9:19]
    node _GEN_42 = mux(eq(UInt<6>("h2a"), _io_out_T), table_42, _GEN_41) @[Bcd.scala 15:{10,10}]
    node table_43 = UInt<8>("h43") @[Bcd.scala 12:14 9:19]
    node _GEN_43 = mux(eq(UInt<6>("h2b"), _io_out_T), table_43, _GEN_42) @[Bcd.scala 15:{10,10}]
    node table_44 = UInt<8>("h44") @[Bcd.scala 12:14 9:19]
    node _GEN_44 = mux(eq(UInt<6>("h2c"), _io_out_T), table_44, _GEN_43) @[Bcd.scala 15:{10,10}]
    node table_45 = UInt<8>("h45") @[Bcd.scala 12:14 9:19]
    node _GEN_45 = mux(eq(UInt<6>("h2d"), _io_out_T), table_45, _GEN_44) @[Bcd.scala 15:{10,10}]
    node table_46 = UInt<8>("h46") @[Bcd.scala 12:14 9:19]
    node _GEN_46 = mux(eq(UInt<6>("h2e"), _io_out_T), table_46, _GEN_45) @[Bcd.scala 15:{10,10}]
    node table_47 = UInt<8>("h47") @[Bcd.scala 12:14 9:19]
    node _GEN_47 = mux(eq(UInt<6>("h2f"), _io_out_T), table_47, _GEN_46) @[Bcd.scala 15:{10,10}]
    node table_48 = UInt<8>("h48") @[Bcd.scala 12:14 9:19]
    node _GEN_48 = mux(eq(UInt<6>("h30"), _io_out_T), table_48, _GEN_47) @[Bcd.scala 15:{10,10}]
    node table_49 = UInt<8>("h49") @[Bcd.scala 12:14 9:19]
    node _GEN_49 = mux(eq(UInt<6>("h31"), _io_out_T), table_49, _GEN_48) @[Bcd.scala 15:{10,10}]
    node table_50 = UInt<8>("h50") @[Bcd.scala 12:14 9:19]
    node _GEN_50 = mux(eq(UInt<6>("h32"), _io_out_T), table_50, _GEN_49) @[Bcd.scala 15:{10,10}]
    node table_51 = UInt<8>("h51") @[Bcd.scala 12:14 9:19]
    node _GEN_51 = mux(eq(UInt<6>("h33"), _io_out_T), table_51, _GEN_50) @[Bcd.scala 15:{10,10}]
    node table_52 = UInt<8>("h52") @[Bcd.scala 12:14 9:19]
    node _GEN_52 = mux(eq(UInt<6>("h34"), _io_out_T), table_52, _GEN_51) @[Bcd.scala 15:{10,10}]
    node table_53 = UInt<8>("h53") @[Bcd.scala 12:14 9:19]
    node _GEN_53 = mux(eq(UInt<6>("h35"), _io_out_T), table_53, _GEN_52) @[Bcd.scala 15:{10,10}]
    node table_54 = UInt<8>("h54") @[Bcd.scala 12:14 9:19]
    node _GEN_54 = mux(eq(UInt<6>("h36"), _io_out_T), table_54, _GEN_53) @[Bcd.scala 15:{10,10}]
    node table_55 = UInt<8>("h55") @[Bcd.scala 12:14 9:19]
    node _GEN_55 = mux(eq(UInt<6>("h37"), _io_out_T), table_55, _GEN_54) @[Bcd.scala 15:{10,10}]
    node table_56 = UInt<8>("h56") @[Bcd.scala 12:14 9:19]
    node _GEN_56 = mux(eq(UInt<6>("h38"), _io_out_T), table_56, _GEN_55) @[Bcd.scala 15:{10,10}]
    node table_57 = UInt<8>("h57") @[Bcd.scala 12:14 9:19]
    node _GEN_57 = mux(eq(UInt<6>("h39"), _io_out_T), table_57, _GEN_56) @[Bcd.scala 15:{10,10}]
    node table_58 = UInt<8>("h58") @[Bcd.scala 12:14 9:19]
    node _GEN_58 = mux(eq(UInt<6>("h3a"), _io_out_T), table_58, _GEN_57) @[Bcd.scala 15:{10,10}]
    node table_59 = UInt<8>("h59") @[Bcd.scala 12:14 9:19]
    node _GEN_59 = mux(eq(UInt<6>("h3b"), _io_out_T), table_59, _GEN_58) @[Bcd.scala 15:{10,10}]
    node table_60 = UInt<8>("h60") @[Bcd.scala 12:14 9:19]
    node _GEN_60 = mux(eq(UInt<6>("h3c"), _io_out_T), table_60, _GEN_59) @[Bcd.scala 15:{10,10}]
    node table_61 = UInt<8>("h61") @[Bcd.scala 12:14 9:19]
    node _GEN_61 = mux(eq(UInt<6>("h3d"), _io_out_T), table_61, _GEN_60) @[Bcd.scala 15:{10,10}]
    node table_62 = UInt<8>("h62") @[Bcd.scala 12:14 9:19]
    node _GEN_62 = mux(eq(UInt<6>("h3e"), _io_out_T), table_62, _GEN_61) @[Bcd.scala 15:{10,10}]
    node table_63 = UInt<8>("h63") @[Bcd.scala 12:14 9:19]
    node _GEN_63 = mux(eq(UInt<6>("h3f"), _io_out_T), table_63, _GEN_62) @[Bcd.scala 15:{10,10}]
    node table_64 = UInt<8>("h64") @[Bcd.scala 12:14 9:19]
    node _GEN_64 = mux(eq(UInt<7>("h40"), _io_out_T), table_64, _GEN_63) @[Bcd.scala 15:{10,10}]
    node table_65 = UInt<8>("h65") @[Bcd.scala 12:14 9:19]
    node _GEN_65 = mux(eq(UInt<7>("h41"), _io_out_T), table_65, _GEN_64) @[Bcd.scala 15:{10,10}]
    node table_66 = UInt<8>("h66") @[Bcd.scala 12:14 9:19]
    node _GEN_66 = mux(eq(UInt<7>("h42"), _io_out_T), table_66, _GEN_65) @[Bcd.scala 15:{10,10}]
    node table_67 = UInt<8>("h67") @[Bcd.scala 12:14 9:19]
    node _GEN_67 = mux(eq(UInt<7>("h43"), _io_out_T), table_67, _GEN_66) @[Bcd.scala 15:{10,10}]
    node table_68 = UInt<8>("h68") @[Bcd.scala 12:14 9:19]
    node _GEN_68 = mux(eq(UInt<7>("h44"), _io_out_T), table_68, _GEN_67) @[Bcd.scala 15:{10,10}]
    node table_69 = UInt<8>("h69") @[Bcd.scala 12:14 9:19]
    node _GEN_69 = mux(eq(UInt<7>("h45"), _io_out_T), table_69, _GEN_68) @[Bcd.scala 15:{10,10}]
    node table_70 = UInt<8>("h70") @[Bcd.scala 12:14 9:19]
    node _GEN_70 = mux(eq(UInt<7>("h46"), _io_out_T), table_70, _GEN_69) @[Bcd.scala 15:{10,10}]
    node table_71 = UInt<8>("h71") @[Bcd.scala 12:14 9:19]
    node _GEN_71 = mux(eq(UInt<7>("h47"), _io_out_T), table_71, _GEN_70) @[Bcd.scala 15:{10,10}]
    node table_72 = UInt<8>("h72") @[Bcd.scala 12:14 9:19]
    node _GEN_72 = mux(eq(UInt<7>("h48"), _io_out_T), table_72, _GEN_71) @[Bcd.scala 15:{10,10}]
    node table_73 = UInt<8>("h73") @[Bcd.scala 12:14 9:19]
    node _GEN_73 = mux(eq(UInt<7>("h49"), _io_out_T), table_73, _GEN_72) @[Bcd.scala 15:{10,10}]
    node table_74 = UInt<8>("h74") @[Bcd.scala 12:14 9:19]
    node _GEN_74 = mux(eq(UInt<7>("h4a"), _io_out_T), table_74, _GEN_73) @[Bcd.scala 15:{10,10}]
    node table_75 = UInt<8>("h75") @[Bcd.scala 12:14 9:19]
    node _GEN_75 = mux(eq(UInt<7>("h4b"), _io_out_T), table_75, _GEN_74) @[Bcd.scala 15:{10,10}]
    node table_76 = UInt<8>("h76") @[Bcd.scala 12:14 9:19]
    node _GEN_76 = mux(eq(UInt<7>("h4c"), _io_out_T), table_76, _GEN_75) @[Bcd.scala 15:{10,10}]
    node table_77 = UInt<8>("h77") @[Bcd.scala 12:14 9:19]
    node _GEN_77 = mux(eq(UInt<7>("h4d"), _io_out_T), table_77, _GEN_76) @[Bcd.scala 15:{10,10}]
    node table_78 = UInt<8>("h78") @[Bcd.scala 12:14 9:19]
    node _GEN_78 = mux(eq(UInt<7>("h4e"), _io_out_T), table_78, _GEN_77) @[Bcd.scala 15:{10,10}]
    node table_79 = UInt<8>("h79") @[Bcd.scala 12:14 9:19]
    node _GEN_79 = mux(eq(UInt<7>("h4f"), _io_out_T), table_79, _GEN_78) @[Bcd.scala 15:{10,10}]
    node table_80 = UInt<8>("h80") @[Bcd.scala 12:14 9:19]
    node _GEN_80 = mux(eq(UInt<7>("h50"), _io_out_T), table_80, _GEN_79) @[Bcd.scala 15:{10,10}]
    node table_81 = UInt<8>("h81") @[Bcd.scala 12:14 9:19]
    node _GEN_81 = mux(eq(UInt<7>("h51"), _io_out_T), table_81, _GEN_80) @[Bcd.scala 15:{10,10}]
    node table_82 = UInt<8>("h82") @[Bcd.scala 12:14 9:19]
    node _GEN_82 = mux(eq(UInt<7>("h52"), _io_out_T), table_82, _GEN_81) @[Bcd.scala 15:{10,10}]
    node table_83 = UInt<8>("h83") @[Bcd.scala 12:14 9:19]
    node _GEN_83 = mux(eq(UInt<7>("h53"), _io_out_T), table_83, _GEN_82) @[Bcd.scala 15:{10,10}]
    node table_84 = UInt<8>("h84") @[Bcd.scala 12:14 9:19]
    node _GEN_84 = mux(eq(UInt<7>("h54"), _io_out_T), table_84, _GEN_83) @[Bcd.scala 15:{10,10}]
    node table_85 = UInt<8>("h85") @[Bcd.scala 12:14 9:19]
    node _GEN_85 = mux(eq(UInt<7>("h55"), _io_out_T), table_85, _GEN_84) @[Bcd.scala 15:{10,10}]
    node table_86 = UInt<8>("h86") @[Bcd.scala 12:14 9:19]
    node _GEN_86 = mux(eq(UInt<7>("h56"), _io_out_T), table_86, _GEN_85) @[Bcd.scala 15:{10,10}]
    node table_87 = UInt<8>("h87") @[Bcd.scala 12:14 9:19]
    node _GEN_87 = mux(eq(UInt<7>("h57"), _io_out_T), table_87, _GEN_86) @[Bcd.scala 15:{10,10}]
    node table_88 = UInt<8>("h88") @[Bcd.scala 12:14 9:19]
    node _GEN_88 = mux(eq(UInt<7>("h58"), _io_out_T), table_88, _GEN_87) @[Bcd.scala 15:{10,10}]
    node table_89 = UInt<8>("h89") @[Bcd.scala 12:14 9:19]
    node _GEN_89 = mux(eq(UInt<7>("h59"), _io_out_T), table_89, _GEN_88) @[Bcd.scala 15:{10,10}]
    node table_90 = UInt<8>("h90") @[Bcd.scala 12:14 9:19]
    node _GEN_90 = mux(eq(UInt<7>("h5a"), _io_out_T), table_90, _GEN_89) @[Bcd.scala 15:{10,10}]
    node table_91 = UInt<8>("h91") @[Bcd.scala 12:14 9:19]
    node _GEN_91 = mux(eq(UInt<7>("h5b"), _io_out_T), table_91, _GEN_90) @[Bcd.scala 15:{10,10}]
    node table_92 = UInt<8>("h92") @[Bcd.scala 12:14 9:19]
    node _GEN_92 = mux(eq(UInt<7>("h5c"), _io_out_T), table_92, _GEN_91) @[Bcd.scala 15:{10,10}]
    node table_93 = UInt<8>("h93") @[Bcd.scala 12:14 9:19]
    node _GEN_93 = mux(eq(UInt<7>("h5d"), _io_out_T), table_93, _GEN_92) @[Bcd.scala 15:{10,10}]
    node table_94 = UInt<8>("h94") @[Bcd.scala 12:14 9:19]
    node _GEN_94 = mux(eq(UInt<7>("h5e"), _io_out_T), table_94, _GEN_93) @[Bcd.scala 15:{10,10}]
    node table_95 = UInt<8>("h95") @[Bcd.scala 12:14 9:19]
    node _GEN_95 = mux(eq(UInt<7>("h5f"), _io_out_T), table_95, _GEN_94) @[Bcd.scala 15:{10,10}]
    node table_96 = UInt<8>("h96") @[Bcd.scala 12:14 9:19]
    node _GEN_96 = mux(eq(UInt<7>("h60"), _io_out_T), table_96, _GEN_95) @[Bcd.scala 15:{10,10}]
    node table_97 = UInt<8>("h97") @[Bcd.scala 12:14 9:19]
    node _GEN_97 = mux(eq(UInt<7>("h61"), _io_out_T), table_97, _GEN_96) @[Bcd.scala 15:{10,10}]
    node table_98 = UInt<8>("h98") @[Bcd.scala 12:14 9:19]
    node _GEN_98 = mux(eq(UInt<7>("h62"), _io_out_T), table_98, _GEN_97) @[Bcd.scala 15:{10,10}]
    node table_99 = UInt<8>("h99") @[Bcd.scala 12:14 9:19]
    node _GEN_99 = mux(eq(UInt<7>("h63"), _io_out_T), table_99, _GEN_98) @[Bcd.scala 15:{10,10}]
    node _table_io_out_T = _GEN_99 @[Bcd.scala 15:10]
    io_out <= _table_io_out_T @[Bcd.scala 15:10]

  module SevenSegDec :
    input clock : Clock
    input reset : UInt<1>
    input io_in : UInt<4>
    output io_out : UInt<7>

    node _T = eq(UInt<1>("h0"), io_in) @[SevenSegDec.scala 13:17]
    node _T_1 = eq(UInt<1>("h1"), io_in) @[SevenSegDec.scala 13:17]
    node _T_2 = eq(UInt<2>("h2"), io_in) @[SevenSegDec.scala 13:17]
    node _T_3 = eq(UInt<2>("h3"), io_in) @[SevenSegDec.scala 13:17]
    node _T_4 = eq(UInt<3>("h4"), io_in) @[SevenSegDec.scala 13:17]
    node _T_5 = eq(UInt<3>("h5"), io_in) @[SevenSegDec.scala 13:17]
    node _T_6 = eq(UInt<3>("h6"), io_in) @[SevenSegDec.scala 13:17]
    node _T_7 = eq(UInt<3>("h7"), io_in) @[SevenSegDec.scala 13:17]
    node _T_8 = eq(UInt<4>("h8"), io_in) @[SevenSegDec.scala 13:17]
    node _T_9 = eq(UInt<4>("h9"), io_in) @[SevenSegDec.scala 13:17]
    node _T_10 = eq(UInt<4>("ha"), io_in) @[SevenSegDec.scala 13:17]
    node _T_11 = eq(UInt<4>("hb"), io_in) @[SevenSegDec.scala 13:17]
    node _T_12 = eq(UInt<4>("hc"), io_in) @[SevenSegDec.scala 13:17]
    node _T_13 = eq(UInt<4>("hd"), io_in) @[SevenSegDec.scala 13:17]
    node _T_14 = eq(UInt<4>("he"), io_in) @[SevenSegDec.scala 13:17]
    node _T_15 = eq(UInt<4>("hf"), io_in) @[SevenSegDec.scala 13:17]
    node _GEN_0 = mux(_T_15, UInt<7>("h71"), UInt<1>("h0")) @[SevenSegDec.scala 13:17 60:14 10:27]
    node _GEN_1 = mux(_T_14, UInt<7>("h79"), _GEN_0) @[SevenSegDec.scala 13:17 57:14]
    node _GEN_2 = mux(_T_13, UInt<7>("h5e"), _GEN_1) @[SevenSegDec.scala 13:17 54:14]
    node _GEN_3 = mux(_T_12, UInt<6>("h39"), _GEN_2) @[SevenSegDec.scala 13:17 51:14]
    node _GEN_4 = mux(_T_11, UInt<7>("h7c"), _GEN_3) @[SevenSegDec.scala 13:17 48:14]
    node _GEN_5 = mux(_T_10, UInt<7>("h77"), _GEN_4) @[SevenSegDec.scala 13:17 45:14]
    node _GEN_6 = mux(_T_9, UInt<7>("h6f"), _GEN_5) @[SevenSegDec.scala 13:17 42:14]
    node _GEN_7 = mux(_T_8, UInt<7>("h7f"), _GEN_6) @[SevenSegDec.scala 13:17 39:14]
    node _GEN_8 = mux(_T_7, UInt<3>("h7"), _GEN_7) @[SevenSegDec.scala 13:17 36:14]
    node _GEN_9 = mux(_T_6, UInt<7>("h7d"), _GEN_8) @[SevenSegDec.scala 13:17 33:14]
    node _GEN_10 = mux(_T_5, UInt<7>("h6d"), _GEN_9) @[SevenSegDec.scala 13:17 30:14]
    node _GEN_11 = mux(_T_4, UInt<7>("h66"), _GEN_10) @[SevenSegDec.scala 13:17 27:14]
    node _GEN_12 = mux(_T_3, UInt<7>("h4f"), _GEN_11) @[SevenSegDec.scala 13:17 24:14]
    node _GEN_13 = mux(_T_2, UInt<7>("h5b"), _GEN_12) @[SevenSegDec.scala 13:17 21:14]
    node _GEN_14 = mux(_T_1, UInt<3>("h6"), _GEN_13) @[SevenSegDec.scala 13:17 18:14]
    node _GEN_15 = mux(_T, UInt<6>("h3f"), _GEN_14) @[SevenSegDec.scala 13:17 15:14]
    node sevSeg = _GEN_15 @[SevenSegDec.scala 10:27]
    io_out <= sevSeg @[SevenSegDec.scala 66:10]

  module VendingMachine :
    input clock : Clock
    input reset : UInt<1>
    input io_price : UInt<5>
    input io_coin2 : UInt<1>
    input io_coin5 : UInt<1>
    input io_buy : UInt<1>
    output io_releaseCan : UInt<1>
    output io_alarm : UInt<1>
    output io_seg : UInt<7>
    output io_an : UInt<4>

    inst bcdConv of BcdTable @[VendingMachine.scala 29:26]
    inst SevSegConv of SevenSegDec @[VendingMachine.scala 30:26]
    reg sum : UInt<8>, clock with :
      reset => (UInt<1>("h0"), sum) @[VendingMachine.scala 21:25]
    reg state : UInt<3>, clock with :
      reset => (UInt<1>("h0"), state) @[VendingMachine.scala 22:25]
    reg numberc2 : UInt<5>, clock with :
      reset => (UInt<1>("h0"), numberc2) @[VendingMachine.scala 23:25]
    reg numberc5 : UInt<5>, clock with :
      reset => (UInt<1>("h0"), numberc5) @[VendingMachine.scala 24:25]
    reg counterClock : UInt<17>, clock with :
      reset => (UInt<1>("h0"), counterClock) @[VendingMachine.scala 26:29]
    reg counterAn : UInt<2>, clock with :
      reset => (UInt<1>("h0"), counterAn) @[VendingMachine.scala 27:29]
    reg add2_REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), add2_REG) @[VendingMachine.scala 32:33]
    node _add2_T = eq(add2_REG, UInt<1>("h0")) @[VendingMachine.scala 32:25]
    node add2 = and(io_coin2, _add2_T) @[VendingMachine.scala 32:23]
    reg add5_REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), add5_REG) @[VendingMachine.scala 33:33]
    node _add5_T = eq(add5_REG, UInt<1>("h0")) @[VendingMachine.scala 33:25]
    node add5 = and(io_coin5, _add5_T) @[VendingMachine.scala 33:23]
    node _T = eq(UInt<1>("h0"), state) @[VendingMachine.scala 39:18]
    node _T_1 = gt(numberc2, UInt<5>("h13")) @[VendingMachine.scala 43:21]
    node _T_2 = gt(numberc5, UInt<5>("h13")) @[VendingMachine.scala 43:39]
    node _T_3 = or(_T_1, _T_2) @[VendingMachine.scala 43:28]
    node _T_4 = lt(sum, UInt<5>("h1e")) @[VendingMachine.scala 45:29]
    node _T_5 = and(add2, _T_4) @[VendingMachine.scala 45:23]
    node _T_6 = lt(sum, UInt<5>("h1b")) @[VendingMachine.scala 47:29]
    node _T_7 = and(add5, _T_6) @[VendingMachine.scala 47:23]
    node _T_8 = lt(sum, io_price) @[VendingMachine.scala 49:31]
    node _T_9 = and(io_buy, _T_8) @[VendingMachine.scala 49:25]
    node _T_10 = geq(sum, io_price) @[VendingMachine.scala 51:31]
    node _T_11 = and(io_buy, _T_10) @[VendingMachine.scala 51:25]
    node _GEN_0 = mux(_T_11, UInt<3>("h4"), state) @[VendingMachine.scala 51:44 52:15 22:25]
    node _GEN_1 = mux(_T_9, UInt<2>("h3"), _GEN_0) @[VendingMachine.scala 49:43 50:15]
    node _GEN_2 = mux(_T_7, UInt<2>("h2"), _GEN_1) @[VendingMachine.scala 47:37 48:15]
    node _GEN_3 = mux(_T_5, UInt<1>("h1"), _GEN_2) @[VendingMachine.scala 45:37 46:15]
    node _GEN_4 = mux(_T_3, UInt<3>("h6"), _GEN_3) @[VendingMachine.scala 43:47 44:15]
    node _T_12 = eq(UInt<1>("h1"), state) @[VendingMachine.scala 39:18]
    node _sum_T = add(sum, UInt<2>("h2")) @[VendingMachine.scala 56:18]
    node _sum_T_1 = tail(_sum_T, 1) @[VendingMachine.scala 56:18]
    node _numberc2_T = add(numberc2, UInt<1>("h1")) @[VendingMachine.scala 57:28]
    node _numberc2_T_1 = tail(_numberc2_T, 1) @[VendingMachine.scala 57:28]
    node _T_13 = eq(UInt<2>("h2"), state) @[VendingMachine.scala 39:18]
    node _sum_T_2 = add(sum, UInt<3>("h5")) @[VendingMachine.scala 61:18]
    node _sum_T_3 = tail(_sum_T_2, 1) @[VendingMachine.scala 61:18]
    node _numberc5_T = add(numberc5, UInt<1>("h1")) @[VendingMachine.scala 62:28]
    node _numberc5_T_1 = tail(_numberc5_T, 1) @[VendingMachine.scala 62:28]
    node _T_14 = eq(UInt<2>("h3"), state) @[VendingMachine.scala 39:18]
    node _T_15 = eq(io_buy, UInt<1>("h0")) @[VendingMachine.scala 67:12]
    node _GEN_5 = mux(_T_15, UInt<1>("h0"), state) @[VendingMachine.scala 67:21 68:15 22:25]
    node _T_16 = eq(UInt<3>("h4"), state) @[VendingMachine.scala 39:18]
    node _sum_T_4 = sub(sum, io_price) @[VendingMachine.scala 72:18]
    node _sum_T_5 = tail(_sum_T_4, 1) @[VendingMachine.scala 72:18]
    node _T_17 = eq(UInt<3>("h5"), state) @[VendingMachine.scala 39:18]
    node _T_18 = eq(io_buy, UInt<1>("h0")) @[VendingMachine.scala 77:12]
    node _GEN_6 = mux(_T_18, UInt<1>("h0"), state) @[VendingMachine.scala 77:21 78:15 22:25]
    node _T_19 = eq(UInt<3>("h6"), state) @[VendingMachine.scala 39:18]
    node _GEN_7 = mux(_T_19, UInt<1>("h1"), UInt<1>("h0")) @[VendingMachine.scala 39:18 82:16 35:17]
    node _GEN_8 = mux(_T_17, UInt<1>("h1"), UInt<1>("h0")) @[VendingMachine.scala 36:17 39:18 76:21]
    node _GEN_9 = mux(_T_17, _GEN_6, state) @[VendingMachine.scala 39:18 22:25]
    node _GEN_10 = mux(_T_17, UInt<1>("h0"), _GEN_7) @[VendingMachine.scala 35:17 39:18]
    node _GEN_11 = mux(_T_16, _sum_T_5, sum) @[VendingMachine.scala 39:18 72:11 21:25]
    node _GEN_12 = mux(_T_16, UInt<3>("h5"), _GEN_9) @[VendingMachine.scala 39:18 73:13]
    node _GEN_13 = mux(_T_16, UInt<1>("h0"), _GEN_8) @[VendingMachine.scala 36:17 39:18]
    node _GEN_14 = mux(_T_16, UInt<1>("h0"), _GEN_10) @[VendingMachine.scala 35:17 39:18]
    node _GEN_15 = mux(_T_14, UInt<1>("h1"), _GEN_14) @[VendingMachine.scala 39:18 66:16]
    node _GEN_16 = mux(_T_14, _GEN_5, _GEN_12) @[VendingMachine.scala 39:18]
    node _GEN_17 = mux(_T_14, sum, _GEN_11) @[VendingMachine.scala 39:18 21:25]
    node _GEN_18 = mux(_T_14, UInt<1>("h0"), _GEN_13) @[VendingMachine.scala 36:17 39:18]
    node _GEN_19 = mux(_T_13, _sum_T_3, _GEN_17) @[VendingMachine.scala 39:18 61:11]
    node _GEN_20 = mux(_T_13, _numberc5_T_1, numberc5) @[VendingMachine.scala 39:18 62:16 24:25]
    node _GEN_21 = mux(_T_13, UInt<1>("h0"), _GEN_16) @[VendingMachine.scala 39:18 63:13]
    node _GEN_22 = mux(_T_13, UInt<1>("h0"), _GEN_15) @[VendingMachine.scala 35:17 39:18]
    node _GEN_23 = mux(_T_13, UInt<1>("h0"), _GEN_18) @[VendingMachine.scala 36:17 39:18]
    node _GEN_24 = mux(_T_12, _sum_T_1, _GEN_19) @[VendingMachine.scala 39:18 56:11]
    node _GEN_25 = mux(_T_12, _numberc2_T_1, numberc2) @[VendingMachine.scala 39:18 57:16 23:25]
    node _GEN_26 = mux(_T_12, UInt<1>("h0"), _GEN_21) @[VendingMachine.scala 39:18 58:13]
    node _GEN_27 = mux(_T_12, numberc5, _GEN_20) @[VendingMachine.scala 39:18 24:25]
    node _GEN_28 = mux(_T_12, UInt<1>("h0"), _GEN_22) @[VendingMachine.scala 35:17 39:18]
    node _GEN_29 = mux(_T_12, UInt<1>("h0"), _GEN_23) @[VendingMachine.scala 36:17 39:18]
    node _GEN_30 = mux(_T, UInt<1>("h0"), _GEN_28) @[VendingMachine.scala 39:18 41:16]
    node _GEN_31 = mux(_T, UInt<1>("h0"), _GEN_29) @[VendingMachine.scala 39:18 42:21]
    node _GEN_32 = mux(_T, _GEN_4, _GEN_26) @[VendingMachine.scala 39:18]
    node _GEN_33 = mux(_T, sum, _GEN_24) @[VendingMachine.scala 39:18 21:25]
    node _GEN_34 = mux(_T, numberc2, _GEN_25) @[VendingMachine.scala 39:18 23:25]
    node _GEN_35 = mux(_T, numberc5, _GEN_27) @[VendingMachine.scala 39:18 24:25]
    node _T_20 = eq(counterClock, UInt<17>("h186a0")) @[VendingMachine.scala 87:21]
    node _counterAn_T = add(counterAn, UInt<1>("h1")) @[VendingMachine.scala 89:28]
    node _counterAn_T_1 = tail(_counterAn_T, 1) @[VendingMachine.scala 89:28]
    node _counterClock_T = add(counterClock, UInt<1>("h1")) @[VendingMachine.scala 91:34]
    node _counterClock_T_1 = tail(_counterClock_T, 1) @[VendingMachine.scala 91:34]
    node _GEN_36 = mux(_T_20, UInt<1>("h0"), _counterClock_T_1) @[VendingMachine.scala 87:35 88:18 91:18]
    node _GEN_37 = mux(_T_20, _counterAn_T_1, counterAn) @[VendingMachine.scala 87:35 89:15 27:29]
    node _T_21 = eq(UInt<1>("h0"), counterAn) @[VendingMachine.scala 96:21]
    node _MuxOut_T = bits(bcdConv.io_out, 3, 0) @[VendingMachine.scala 100:31]
    node _T_22 = eq(UInt<1>("h1"), counterAn) @[VendingMachine.scala 96:21]
    node _MuxOut_T_1 = bits(bcdConv.io_out, 7, 4) @[VendingMachine.scala 105:31]
    node _T_23 = eq(UInt<2>("h2"), counterAn) @[VendingMachine.scala 96:21]
    node _MuxOut_T_2 = bits(bcdConv.io_out, 3, 0) @[VendingMachine.scala 110:31]
    node _T_24 = eq(UInt<2>("h3"), counterAn) @[VendingMachine.scala 96:21]
    node _MuxOut_T_3 = bits(bcdConv.io_out, 7, 4) @[VendingMachine.scala 115:31]
    node _GEN_38 = validif(_T_24, sum) @[VendingMachine.scala 113:21 96:21]
    node _GEN_39 = mux(_T_24, UInt<4>("h8"), UInt<4>("h1")) @[VendingMachine.scala 114:14 96:21 18:32]
    node _GEN_40 = mux(_T_24, _MuxOut_T_3, UInt<4>("h0")) @[VendingMachine.scala 115:14 96:21 19:32]
    node _GEN_41 = mux(_T_23, sum, _GEN_38) @[VendingMachine.scala 108:21 96:21]
    node _GEN_42 = mux(_T_23, UInt<3>("h4"), _GEN_39) @[VendingMachine.scala 109:14 96:21]
    node _GEN_43 = mux(_T_23, _MuxOut_T_2, _GEN_40) @[VendingMachine.scala 110:14 96:21]
    node _GEN_44 = mux(_T_22, io_price, _GEN_41) @[VendingMachine.scala 103:21 96:21]
    node _GEN_45 = mux(_T_22, UInt<2>("h2"), _GEN_42) @[VendingMachine.scala 104:14 96:21]
    node _GEN_46 = mux(_T_22, _MuxOut_T_1, _GEN_43) @[VendingMachine.scala 105:14 96:21]
    node _GEN_47 = mux(_T_21, io_price, _GEN_44) @[VendingMachine.scala 96:21 98:21]
    node _GEN_48 = mux(_T_21, UInt<1>("h1"), _GEN_45) @[VendingMachine.scala 96:21 99:14]
    node _GEN_49 = mux(_T_21, _MuxOut_T, _GEN_46) @[VendingMachine.scala 100:14 96:21]
    node sevSeg = SevSegConv.io_out @[VendingMachine.scala 120:10 17:32]
    node _io_seg_T = not(sevSeg) @[VendingMachine.scala 121:13]
    node select = _GEN_48 @[VendingMachine.scala 18:32]
    node _io_an_T = not(select) @[VendingMachine.scala 122:13]
    node MuxOut = _GEN_49 @[VendingMachine.scala 19:32]
    io_releaseCan <= _GEN_31
    io_alarm <= _GEN_30
    io_seg <= _io_seg_T @[VendingMachine.scala 121:10]
    io_an <= _io_an_T @[VendingMachine.scala 122:10]
    sum <= mux(reset, UInt<8>("h0"), _GEN_33) @[VendingMachine.scala 21:{25,25}]
    state <= mux(reset, UInt<3>("h0"), _GEN_32) @[VendingMachine.scala 22:{25,25}]
    numberc2 <= mux(reset, UInt<5>("h0"), _GEN_34) @[VendingMachine.scala 23:{25,25}]
    numberc5 <= mux(reset, UInt<5>("h0"), _GEN_35) @[VendingMachine.scala 24:{25,25}]
    counterClock <= mux(reset, UInt<17>("h0"), _GEN_36) @[VendingMachine.scala 26:{29,29}]
    counterAn <= mux(reset, UInt<2>("h0"), _GEN_37) @[VendingMachine.scala 27:{29,29}]
    bcdConv.clock <= clock
    bcdConv.reset <= reset
    bcdConv.io_in <= _GEN_47
    SevSegConv.clock <= clock
    SevSegConv.reset <= reset
    SevSegConv.io_in <= MuxOut @[VendingMachine.scala 119:20]
    add2_REG <= io_coin2 @[VendingMachine.scala 32:33]
    add5_REG <= io_coin5 @[VendingMachine.scala 33:33]
