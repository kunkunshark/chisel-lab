[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Darryl Theodorus C\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Darryl Theodorus C\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Oracle Corporation Java 19.0.2)
[debug]       Load.loadUnit: plugins took 90.8469ms
[debug]       Load.loadUnit: defsScala took 0.3469ms
[debug] [Loading] Scanning directory C:\Users\Darryl Theodorus C\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Darryl Theodorus C\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 19.1553 ms
[debug]           Load.resolveProject(global-plugins) took 41.152ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Darryl Theodorus C\.sbt\1.0\plugins, plugins: List(<none>))) took 83.3422ms
[debug] [Loading] Done in C:\Users\Darryl Theodorus C\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 113.1641ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.262ms
[debug]     Load.loadUnit(file:/C:/Users/Darryl%20Theodorus%20C/.sbt/1.0/plugins/, ...) took 215.5853ms
[debug]   Load.apply: load took 419.8744ms
[debug]   Load.apply: resolveProjects took 5.6491ms
[debug]   Load.apply: finalTransforms took 58.6636ms
[debug]   Load.apply: config.delegates took 7.3274ms
[debug]   Load.apply: Def.make(settings)... took 350.6291ms
[debug]   Load.apply: structureIndex took 92.5228ms
[debug]   Load.apply: mkStreams took 1.3946ms
[info] loading global plugins from C:\Users\Darryl Theodorus C\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2014.2738ms
[debug]           Load.loadUnit: plugins took 20.537ms
[debug]           Load.loadUnit: defsScala took 0.0042ms
[debug] [Loading] Scanning directory C:\Users\Darryl Theodorus C\Documents\GitHub\chisel-lab\lab3\project
[debug]             Load.loadUnit: mkEval took 5.316ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Darryl Theodorus C\Documents\GitHub\chisel-lab\lab3\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.3911 ms
[info] loading settings for project lab3-build from idea.sbt ...
[debug]               Load.resolveProject(lab3-build) took 8.751ms
[debug]             Load.loadTransitive: finalizeProject(Project(id lab3-build, base: C:\Users\Darryl Theodorus C\Documents\GitHub\chisel-lab\lab3\project, plugins: List(<none>))) took 10.6448ms
[debug] [Loading] Done in C:\Users\Darryl Theodorus C\Documents\GitHub\chisel-lab\lab3\project, returning: (lab3-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2017.8566ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.5019ms
[debug]         Load.loadUnit(file:/C:/Users/Darryl%20Theodorus%20C/Documents/GitHub/chisel-lab/lab3/project/, ...) took 2044.7962ms
[debug]       Load.apply: load took 2046.2658ms
[debug]       Load.apply: resolveProjects took 0.2055ms
[debug]       Load.apply: finalTransforms took 10.1119ms
[debug]       Load.apply: config.delegates took 0.3401ms
[debug]       Load.apply: Def.make(settings)... took 76.7193ms
[debug]       Load.apply: structureIndex took 26.1254ms
[debug]       Load.apply: mkStreams took 0.0018ms
[info] loading project definition from C:\Users\Darryl Theodorus C\Documents\GitHub\chisel-lab\lab3\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3165.1894ms
[debug]     Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\Users\Darryl Theodorus C\Documents\GitHub\chisel-lab\lab3
[debug]       Load.loadUnit: mkEval took 0.1949ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Darryl Theodorus C\Documents\GitHub\chisel-lab\lab3, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.3431 ms
[info] loading settings for project lab3 from build.sbt ...
[debug]         Load.resolveProject(lab3) took 30.1403ms
[debug]       Load.loadTransitive: finalizeProject(Project(id lab3, base: C:\Users\Darryl Theodorus C\Documents\GitHub\chisel-lab\lab3, plugins: List(<none>))) took 33.5564ms
[debug] [Loading] Done in C:\Users\Darryl Theodorus C\Documents\GitHub\chisel-lab\lab3, returning: (lab3)
[debug]     Load.loadUnit: loadedProjectsRaw took 1458.2147ms
[debug]     Load.loadUnit: cleanEvalClasses took 20.3808ms
[debug]   Load.loadUnit(file:/C:/Users/Darryl%20Theodorus%20C/Documents/GitHub/chisel-lab/lab3/, ...) took 4644.7116ms
[debug] Load.apply: load took 4646.2133ms
[debug] Load.apply: resolveProjects took 0.1399ms
[debug] Load.apply: finalTransforms took 18.5696ms
[debug] Load.apply: config.delegates took 0.2346ms
[debug] Load.apply: Def.make(settings)... took 56.5654ms
[debug] Load.apply: structureIndex took 20.5581ms
[debug] Load.apply: mkStreams took 0.0021ms
[info] set current project to lab3 (in build file:/C:/Users/Darryl%20Theodorus%20C/Documents/GitHub/chisel-lab/lab3/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 61738 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 61738, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to lab3 (in build file:/C:/Users/Darryl%20Theodorus%20C/Documents/GitHub/chisel-lab/lab3/)
[debug] > Exec(idea-shell, None, None)
