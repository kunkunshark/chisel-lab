[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Darryl Theodorus C\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Darryl Theodorus C\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Oracle Corporation Java 19.0.2)
[debug]       Load.loadUnit: plugins took 91.5608ms
[debug]       Load.loadUnit: defsScala took 0.4237ms
[debug] [Loading] Scanning directory C:\Users\Darryl Theodorus C\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Darryl Theodorus C\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 18.4906 ms
[debug]           Load.resolveProject(global-plugins) took 50.4873ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Darryl Theodorus C\.sbt\1.0\plugins, plugins: List(<none>))) took 87.8664ms
[debug] [Loading] Done in C:\Users\Darryl Theodorus C\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 119.243ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2848ms
[debug]     Load.loadUnit(file:/C:/Users/Darryl%20Theodorus%20C/.sbt/1.0/plugins/, ...) took 220.3099ms
[debug]   Load.apply: load took 422.3665ms
[debug]   Load.apply: resolveProjects took 7.4973ms
[debug]   Load.apply: finalTransforms took 66.0701ms
[debug]   Load.apply: config.delegates took 8.4072ms
[debug]   Load.apply: Def.make(settings)... took 397.3217ms
[debug]   Load.apply: structureIndex took 103.184ms
[debug]   Load.apply: mkStreams took 1.0429ms
[info] loading global plugins from C:\Users\Darryl Theodorus C\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2196.7091ms
[debug]           Load.loadUnit: plugins took 21.6299ms
[debug]           Load.loadUnit: defsScala took 0.0047ms
[debug] [Loading] Scanning directory C:\Users\Darryl Theodorus C\Documents\GitHub\chisel-lab\lab2\project
[debug]             Load.loadUnit: mkEval took 4.6887ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Darryl Theodorus C\Documents\GitHub\chisel-lab\lab2\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.5868 ms
[info] loading settings for project lab2-build from idea.sbt ...
[debug]               Load.resolveProject(lab2-build) took 5.4414ms
[debug]             Load.loadTransitive: finalizeProject(Project(id lab2-build, base: C:\Users\Darryl Theodorus C\Documents\GitHub\chisel-lab\lab2\project, plugins: List(<none>))) took 7.5533ms
[debug] [Loading] Done in C:\Users\Darryl Theodorus C\Documents\GitHub\chisel-lab\lab2\project, returning: (lab2-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2110.2471ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.164ms
[debug]         Load.loadUnit(file:/C:/Users/Darryl%20Theodorus%20C/Documents/GitHub/chisel-lab/lab2/project/, ...) took 2137.0192ms
[debug]       Load.apply: load took 2138.3572ms
[debug]       Load.apply: resolveProjects took 0.1377ms
[debug]       Load.apply: finalTransforms took 12.2115ms
[debug]       Load.apply: config.delegates took 0.3621ms
[debug]       Load.apply: Def.make(settings)... took 85.04ms
[debug]       Load.apply: structureIndex took 32.5947ms
[debug]       Load.apply: mkStreams took 0.0016ms
[info] loading project definition from C:\Users\Darryl Theodorus C\Documents\GitHub\chisel-lab\lab2\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3123.2898ms
[debug]     Load.loadUnit: defsScala took 0.0048ms
[debug] [Loading] Scanning directory C:\Users\Darryl Theodorus C\Documents\GitHub\chisel-lab\lab2
[debug]       Load.loadUnit: mkEval took 0.1873ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Darryl Theodorus C\Documents\GitHub\chisel-lab\lab2, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.2005 ms
[info] loading settings for project lab2 from build.sbt ...
[debug]         Load.resolveProject(lab2) took 32.6269ms
[debug]       Load.loadTransitive: finalizeProject(Project(id lab2, base: C:\Users\Darryl Theodorus C\Documents\GitHub\chisel-lab\lab2, plugins: List(<none>))) took 37.3553ms
[debug] [Loading] Done in C:\Users\Darryl Theodorus C\Documents\GitHub\chisel-lab\lab2, returning: (lab2)
[debug]     Load.loadUnit: loadedProjectsRaw took 1382.4065ms
[debug]     Load.loadUnit: cleanEvalClasses took 26.0573ms
[debug]   Load.loadUnit(file:/C:/Users/Darryl%20Theodorus%20C/Documents/GitHub/chisel-lab/lab2/, ...) took 4532.7548ms
[debug] Load.apply: load took 4534.1258ms
[debug] Load.apply: resolveProjects took 0.1029ms
[debug] Load.apply: finalTransforms took 29.5532ms
[debug] Load.apply: config.delegates took 0.4167ms
[debug] Load.apply: Def.make(settings)... took 86.9273ms
[debug] Load.apply: structureIndex took 24.7242ms
[debug] Load.apply: mkStreams took 0.0019ms
[info] set current project to lab2 (in build file:/C:/Users/Darryl%20Theodorus%20C/Documents/GitHub/chisel-lab/lab2/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 57335 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 57335, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to lab2 (in build file:/C:/Users/Darryl%20Theodorus%20C/Documents/GitHub/chisel-lab/lab2/)
[debug] > Exec(idea-shell, None, None)
